#!/usr/bin/perl
#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use NethServer::ApiTools;
use strict;
use warnings;
my $input = NethServer::ApiTools::readInput();

my $hostname = $input->{'SmartHostName'};
my $username = $input->{'SmartHostUsername'};
my $name = $input->{'SmartHostName'};
my $password = $input->{'SmartHostPassword'};
my $port = $input->{'SmartHostPort'};
my $tls = $input->{'SmartHostTlsStatus'};

# find the correct encryption
my $crypt;
if ($tls eq 'enabled') {
    $crypt = '-tls';
} else {
    $crypt = '';
}

my @swaks = ("/usr/bin/swaks","--timeout","5","--to", $username,"--from",$username,"--auth-user",
    $username,"--auth-password",$password,"--server",$hostname,"--port",$port,$tls);

system(@swaks);

if ($?) {
    NethServer::ApiTools::error();
} else {
    NethServer::ApiTools::success();
}
